Note: No changes are required in app.py

DB config

Create app.sock with perm

DB configuration

Step 1: Modify the app.py file

from flask import Flask, request, render_template_string, g
import sqlite3

app = Flask(__name__)

def get_db():
    if 'db' not in g:
        g.db = sqlite3.connect('database.db')
        g.db.row_factory = sqlite3.Row
    return g.db

def init_db():
    with app.app_context():
        db = get_db()
        with app.open_resource('schema.sql') as f:
            db.executescript(f.read().decode('utf8'))

@app.route('/', methods=['GET', 'POST'])
def home():
    if request.method == 'POST':
        user_input = request.form['user_input']
        db = get_db()
        db.execute('INSERT INTO user_input (input) VALUES (?)', (user_input,))
        db.commit()
        return render_template_string('''
            <p>Hello, welcome to this app</p>
            <form method="post">
                <input type="text" name="user_input" />
                <input type="submit" value="OK" />
            </form>
            <h2>You entered: {{ user_input }}</h2>
        ''', user_input=user_input)
    return render_template_string('''
        <p>Hello, welcome to this app</p>
        <form method="post">
            <input type="text" name="user_input" />
            <input type="submit" value="OK" />
        </form>
    ''')

if __name__ == '__main__':
    with app.app_context():
        init_db()
    app.run(host='0.0.0.0', port=80)


Step 2: Create the schema.sql file
schema.sql 

CREATE TABLE IF NOT EXISTS user_input (
    id INTEGER PRIMARY KEY,
    input TEXT NOT NULL
);


Step 3: Initialize the database

You can do this in the Python shell:

from app import init_db
init_db()

>>>from app import init_db
>>>init_db() 



DB queries

sudo yum install sqlite

restart your Nginx 
app using the command uwsgi --ini /home/ec2-user/app/app.ini

Login to the database: 

sqlite3 database.db, 

below command to list all tables in the database:

.tables 

.schema user_input command to view the structure of a table

View data in tables: 

Use the SELECT * FROM user_input; 

 .quit command or press Ctrl+D to exit the SQLite command-line 










hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh


(venv) [root@ip-172-31-10-134 app]# which uwsgi
/home/ec2-user/venv/bin/uwsgi
(venv) [root@ip-172-31-10-134 app]# echo $PATH
/home/ec2-user/venv/bin:/root/.local/bin:/root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/var/lib/snapd/snap/bin
(venv) [root@ip-172-31-10-134 app]#


cat /etc/systemd/system/uwsgi.service
[Unit]
Description=uWSGI service
After=network.target

[Service]
User=root
Group=root
WorkingDirectory=/home/ec2-user/app
Environment="PATH=/home/ec2-user/venv/bin"
ExecStart=/home/ec2-user/venv/bin/uwsgi --ini /home/ec2-user/app/app.ini

[Install]
WantedBy=multi-user.target
(venv) [root@ip-172-31-10-134 app]# which uwsgi

